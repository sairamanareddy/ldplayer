.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "dns\-replay\-proxy" "1" "October 5, 2018" "" ""
.hy
.SH NAME
.PP
dns\-replay\-proxy \- a proxy to emulate DNS hierarchy
.SH SYNOPSIS
.PP
dns\-replay\-proxy [\f[C]\-\-auth_addr\f[] \f[I]IP\f[]]
[\f[C]\-\-rec_addr\f[] \f[I]IP\f[]] [\f[C]\-\-num_threads\f[]
\f[I]NUMBER\f[]] [\f[C]\-\-proxy_type\f[] \f[I]TYPE\f[]]
[\f[C]\-\-tun_name\f[] \f[I]NAME\f[]] [\f[C]\-\-dry_run\f[]]
.SH DESCRIPTION
.PP
dns\-replay\-proxy manipulates packet addresses to emulate DNS hierarchy
in LDplayer.
Specifically, dns\-replay\-proxy reads packets from the given tunnel
interface, rewrites the source and destination addresses, recomputes the
check\-sum and sends out the modified packets.
.PP
dns\-replay\-proxy has two different modes, \f[B]recursive\f[] (default)
or \f[B]authoritative\f[], specified by \f[C]\-\-proxy_type\f[].
It should run at the same machine of either a recursive server
(\f[C]\-\-proxy_type\ recursive\f[]) or a authoritative server
(\f[C]\-\-proxy_type\ authoritative\f[]).
The authoritative server should run with split\-horizon DNS, selecting
zone by matching query source IP addresses.
.PP
It is recommended to use multiple threads (\f[C]\-\-num_threads\f[]) for
fast packet processing.
.PP
There are a few steps before running dns\-replay\-proxy.
.PP
(You might want to use scripts in LDplayer/dns\-route\-setup for the
following setup.)
.PP
First, you need to create two network tunnel interfaces at the recursive
and the authoritative servers respectively, for example:
.IP
.nf
\f[C]
sudo\ ip\ tuntap\ add\ dev\ $TUN\ mode\ tun
sudo\ ifconfig\ $TUN\ 172.16.0.1/16\ up
\f[]
.fi
.PP
Second, you need to setup port\-based routing.
All DNS queries out of the recursive server and all responses out of the
authoritative server must be routed to the network tunnel interfaces,
for example:
.IP
.nf
\f[C]
at\ recursive\ server:
sudo\ iptables\ \-A\ OUTPUT\ \-t\ mangle\ \-p\ udp\ \-s\ $SERVER_IP\ \-\-dport\ 53\ \-j\ MARK\ \-\-set\-mark\ $MARK
sudo\ iptables\ \-A\ OUTPUT\ \-t\ mangle\ \-p\ tcp\ \-s\ $SERVER_IP\ \-\-dport\ 53\ \-j\ MARK\ \-\-set\-mark\ $MARK

at\ authoritative\ server:
sudo\ iptables\ \-A\ OUTPUT\ \-t\ mangle\ \-p\ udp\ \-s\ $SERVER_IP\ \-\-sport\ 53\ \-j\ MARK\ \-\-set\-mark\ $MARK
sudo\ iptables\ \-A\ OUTPUT\ \-t\ mangle\ \-p\ tcp\ \-s\ $SERVER_IP\ \-\-sport\ 53\ \-j\ MARK\ \-\-set\-mark\ $MARK

at\ both\ servers:
sudo\ ip\ route\ add\ default\ via\ 172.16.0.1\ dev\ $TUN\ table\ $TABLE
sudo\ ip\ rule\ add\ from\ $SERVER_IP\ fwmark\ $MARK\ table\ $TABLE
\f[]
.fi
.PP
The message flow would look like the following:
.IP
.nf
\f[C]
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-+\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ Recursive\ |\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\->|\ Authoritative\ |
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ Proxy\ \ \ |\ \ From:\ com_server\ \ \ |\ \ \ \ \ Server\ \ \ \ |
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-+\ \ \ \ To:\ Auth_server\ \ +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ all\ responses
\ \ \ \ \ \ \ \ From:\ Rec_server\ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ (sport:\ 53)
\ \ \ \ \ \ \ \ \ \ To:\ com_server\ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ V
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-+\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ Recursive\ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ Authoritative\ |
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ TUN\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ TUN\ \ \ \ \ \ |
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-+\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ From:\ Auth_server\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ all\ queries\ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ To:\ com_server
\ \ \ \ \ \ \ \ \ \ \ \ \ \ (dport:53)\ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ V
+\-\-\-\-\-\-\-\-\-+\ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-+\ \ From:\ com_server\ \ \ +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
|\ \ Stub\ \ \ |\-\-\-\-\-\->\ |\ Recursive\ |\ \ \ \ To:\ Rec_server\ \ \ |\ Authoritative\ |
|(clients)|<\-\-\-\-\-\-\ |\ \ Server\ \ \ |<\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-|\ \ \ \ \ Proxy\ \ \ \ \ |
+\-\-\-\-\-\-\-\-\-+\ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-+\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\f[]
.fi
.SH OPTIONS
.TP
.B \f[C]\-\-auth_addr\f[] \f[I]IP\f[]
IP address of the authoritative server, IPv4 only
.RS
.RE
.TP
.B \f[C]\-\-rec_addr\f[] \f[I]IP\f[]
IP address of the recursive server, IPv4 only
.RS
.RE
.TP
.B \f[C]\-\-tun_name\f[] \f[I]NAME\f[]
name of the TUN interface; default is \f[I]dnstun\f[]
.RS
.RE
.TP
.B \f[C]\-\-num_threads\f[] \f[I]NUMBER\f[]
number of threads, default is 1
.RS
.RE
.TP
.B \f[C]\-\-proxy_type\f[] \f[I]TYPE\f[]
type of the proxy, \f[B]recursive\f[] (default) or
\f[B]authoritative\f[]
.RS
.RE
.TP
.B \f[C]\-\-dry_run\f[]
output debug message without running the proxy, default is false
.RS
.RE
.SH EXAMPLES
.PP
For example, with network tunnel name \f[I]dnstun\f[], recursive server
address \f[I]192.168.1.10\f[], authoritative server address
\f[I]192.168.1.11\f[]:
.PP
at recursive server:
.IP
.nf
\f[C]
sudo\ ./dns\-replay\-proxy\ \-\-proxy_type=recursive\ \-\-tun_name=dnstun\ \-\-auth_addr=192.168.1.11\ \-\-rec_addr=192.168.1.10\ \-\-num_threads=3
\f[]
.fi
.PP
at authoritative server:
.IP
.nf
\f[C]
sudo\ ./dns\-replay\-proxy\ \-\-proxy_type=authoritative\ \-\-tun_name=dnstun\ \-\-auth_addr=192.168.1.11\ \-\-rec_addr=192.168.1.10\ \-\-num_threads=3
\f[]
.fi
.SH INSTALLATION
.PP
To build, type \f[I]make\f[].
.PP
It requires the following packages on Fedora: glog\-devel gflags\-devel
.SH ALSO SEE
.PP
dns\-replay\-controller(1), dns\-replay\-client(1),
dns\-query\-mutator(1)
.SH CHANGES
.IP \[bu] 2
1.0, 2018\-10\-05: Beta release
.SH AUTHORS
Liang Zhu <liangzhu@isi.edu>.
