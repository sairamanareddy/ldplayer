.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "dns\-replay\-client" "1" "October 5, 2018" "" ""
.hy
.SH NAME
.PP
dns\-replay\-client \- replay DNS queries with accurate timing
.SH SYNOPSIS
.PP
dns\-replay\-client [\-i \f[I]FORMAT:PATH\f[]] [\-o \f[I]OUTPUT\f[]]
[\-s \f[I]IP:PORT\f[]] [\-r \f[I]IP:PORT\f[]] [\-n \f[I]NUMBER\f[]] [\-c
\f[I]TYPE\f[]] [\-t \f[I]TIMEOUT\f[]] [\-l \f[I]SECONDS\f[]] [\-u] [\-d]
[\-f] [\-v] [\-V] [\-h]
.SH DESCRIPTION
.PP
dns\-replay\-client replays DNS queries against a real DNS server with
correct timing.
Optionally it can log the latency for each query, or the timing for each
query and response.
Multiple instances of dns\-replay\-client can work coordinately to
replay large query stream with dns\-replay\-controller.
.PP
It deals with three different types of input format:
.IP \[bu] 2
network \f[I]trace\f[]: any format accepted by libtrace, such as pcap
and erf file
.IP \[bu] 2
plain \f[I]text\f[]: a Fsdb file where each line contains data elements
delimited by spaces.
Each line of the input text file should be (time, source ip, query name,
query class, query type, protocol).
.IP \[bu] 2
customized \f[I]raw\f[] binary: a DNS message with prepeded message
size.
The DNS message is defined in dns_msg.proto, and is converted to binary
by Google's protocol buffer library.
.PP
dns\-query\-mutator can convert network trace files to raw files.
.PP
It is recommended to use \f[I]raw\f[] input files when the input query
rate is high, in order to achieve the actual query rate.
.PP
By default, dns\-replay\-client creates multiple processes to utilize
parallelism of multi\-core CPU settings.
.PP
By default, dns\-replay\-client loads all the input trace into memory.
Option \f[C]\-l/\-\-limit\f[] can preload limited seconds of traces to
control RAM usage.
.SH OPTIONS
.TP
.B \f[C]\-i/\-\-input\f[] \f[I]FORMAT:FILE\f[]
input stream, format and file separated by colon like FORMAT:FILE.
Accepted format: \f[B]trace\f[] (network trace), \f[B]text\f[] (plain
text Fsdb), \f[B]raw\f[] (customized binary).
Use \- as FILE to read from standard input.
It is required without option \-d.
.RS
.RE
.TP
.B \f[C]\-o/\-\-output\f[] \f[I]FORMAT:FILE\f[]
\f[I]optional\f[] output file, format and file separated by colon like
FORMAT:FILE.
Accepted format: \f[B]latency\f[] (output the latency of each query),
\f[B]timing\f[] (output the timing of each query and response).
Use \- as FILE to write to stdout.
.RS
.RE
.TP
.B \f[C]\-s/\-\-server\f[] \f[I]IP:PORT\f[]
server address and port, separated by colon, e.g.\ 192.168.1.1:53
.RS
.RE
.TP
.B \f[C]\-r/\-\-controller\f[] \f[I]IP:PORT\f[]
address and port to receive message from controller,
e.g.\ 192.168.1.100:10053, required in distributed mode (\-d)
.RS
.RE
.TP
.B \f[C]\-n/\-\-num\-workers\f[] \f[I]NUMBER\f[]
specify number of worker processes.
The default is the number of CPU cores.
.RS
.RE
.TP
.B \f[C]\-c/\-\-connections\f[] \f[I]TYPE\f[]
specify the type connection that the queries are send over.
Accepted options: udp/tcp/tls/adaptive, adaptive: query with protocol in
input stream.
(Note that tls has not been implemented yet.)
.RS
.RE
.TP
.B \f[C]\-t/\-\-timeout\f[] \f[I]TIMEOUT\f[]
specify the timeout for tcp/tls connections, default is 30 seconds
.RS
.RE
.TP
.B \f[C]\-l/\-\-limit\f[] \f[I]SECONDS\f[]
preload seconds of trace, used to control memory consumption default is
none (or any negative integer): read all in memory option `\-f' set this
to none automatically
.RS
.RE
.TP
.B \f[C]\-u/\-\-unify\-udp\f[]
each worker uses one socket for all the UDP queries.
By default it uses different sockets for different source IP.
.RS
.RE
.TP
.B \f[C]\-d/\-\-distribute\f[]
distributed mode with reading input stream from controller.
This requires dns\-replay\-controller running separately.
.RS
.RE
.TP
.B \f[C]\-f/\-\-fast\f[]
the fastest query replay rate: send input queries immediately without
setup timer
.RS
.RE
.TP
.B \f[C]\-h/\-\-help\f[]
print help message
.RS
.RE
.TP
.B \f[C]\-v/\-\-verbose\f[]
verbose log; default is none
.RS
.RE
.TP
.B \f[C]\-V/\-\-version\f[]
show the program version
.RS
.RE
.SH EXAMPLES
.PP
Assume there are input files:
.PP
test.pcap:
.IP
.nf
\f[C]
contains\ one\ UDP\ query\ and\ one\ TCP\ query\ for\ "www.isi.edu\ A".
\f[]
.fi
.PP
test.fsdb:
.IP
.nf
\f[C]
#fsdb\ time\ src_ip\ qname\ qclass\ qtype\ protocol
1427330638.079111\ 192.168.1.1\ www.isi.edu\ IN\ A\ udp
1427330638.079222\ 192.168.1.2\ www.isi.edu\ IN\ A\ tcp
\f[]
.fi
.PP
test.raw:
.IP
.nf
\f[C]
\&./dns\-query\-mutator\ \-i\ trace:test.pcap\ \-o\ raw:test.raw
\f[]
.fi
.IP "1." 3
replay queries over UDP and output latency to file test.txt
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-client\ \-i\ text:test.fsdb\ \-s\ 192.168.1.200:53\ \-c\ udp\ \-o\ latency:test.txt
\ or\ use\ pcap\ input\ with\ \-i\ trace:test.pcap
\f[]
.fi
.RE
.IP "2." 3
replay queries over TCP and output the timing of reach query and
response to stdout
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-client\ \-i\ text:test.fsdb\ \-s\ 192.168.1.200:53\ \-c\ tcp\ \-o\ timing:\-
\f[]
.fi
.RE
.IP "3." 3
replay queries over the protocol given in the input
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-client\ \-i\ text:test.fsdb\ \-s\ 192.168.1.200:53\ \-c\ adaptive\ \-o\ timing:\-
\f[]
.fi
.RE
.IP "4." 3
preload 15\-second trace to control ram usage
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-client\ \-l\ 15\ \-i\ raw:test.raw\ \-s\ 192.168.1.200:53\ \-c\ adaptive\ \-o\ timing:\-
\f[]
.fi
.RE
.IP "5." 3
use standard input
.RS 4
.IP
.nf
\f[C]
\ cat\ test.fsdb\ |\ ./dns\-replay\-client\ \-i\ text:\-\ \-s\ 192.168.1.200:53\ \-c\ adaptive\ \-o\ latency:\-
\ cat\ test.pcap\ |\ ./dns\-replay\-client\ \-i\ trace:\-\ \-s\ 192.168.1.200:53\ \-c\ adaptive\ \-o\ latency:\-
\ cat\ test.raw\ |\ ./dns\-replay\-client\ \-i\ raw:\-\ \-s\ 192.168.1.200:53\ \-c\ adaptive\ \-o\ latency:\-
\f[]
.fi
.RE
.IP "6." 3
run in distributed mode
.RS 4
.IP
.nf
\f[C]
\ assume\ dns\-replay\-controller\ is\ running\ at\ port\ 10053\ on\ 192.168.1.100
\ ./dns\-replay\-client\ \-d\ \-s\ 192.168.1.200:53\ \-c\ adaptive\ \-o\ timing:\-\ \-r\ 192.168.1.100:10053
\f[]
.fi
.RE
.SH INSTALLATION
.PP
To build, type \f[I]make\f[].
.PP
It requires the following packages on Fedora: ldns\-devel
libtrace\-devel libevent\-devel protobuf\-devel
.SH ALSO SEE
.PP
dns\-replay\-controller(1), dns\-query\-mutator(1), Fsdb(3)
.SH CHANGES
.IP \[bu] 2
0.1, 2016\-10\-22: initial release
.IP \[bu] 2
1.0, 2018\-10\-05: Bug fixes and Beta release
.SH AUTHORS
Liang Zhu <liangzhu@isi.edu>.
