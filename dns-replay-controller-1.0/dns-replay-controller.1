.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "dns\-replay\-controller" "1" "October 5, 2018" "" ""
.hy
.SH NAME
.PP
dns\-replay\-controller \- read DNS query input and distribute to replay
clients
.SH SYNOPSIS
.PP
dns\-replay\-controller [\f[C]\-\-input\f[] \f[I]FORMAT:PATH\f[]]
[\f[C]\-\-output\f[] \f[I]OUPUT\f[]] [\f[C]\-\-address\f[]
\f[I]ADDRESS\f[]] [\f[C]\-\-port\f[] \f[I]PORT\f[]]
[\f[C]\-\-num_clients\f[] \f[I]NUMBER\f[]] [\f[C]\-\-trace_limit\f[]
\f[I]SECONDS\f[]] [\f[C]\-\-filter\f[] \f[I]FILTER\f[]]
[\f[C]\-\-version\f[]] [\f[C]\-\-help\f[]] [\f[C]\-\-dry_run\f[]]
.SH DESCRIPTION
.PP
dns\-replay\-controller reads DNS query stream and distributes queries
to replay clients (dns\-replay\-client).
.PP
It deals with three different types of input format:
.IP \[bu] 2
network \f[I]trace\f[]: any format accepted by libtrace, such as pcap
and erf file
.IP \[bu] 2
plain \f[I]text\f[]: a Fsdb file where each line contains data elements
delimited by spaces.
Each line of the input text file should be (time, source ip, query name,
query class, query type, protocol).
.IP \[bu] 2
customized \f[I]raw\f[] binary: a DNS message with prepended message
size.
The DNS message is defined in dns_msg.proto, and is converted to binary
by Google's protocol buffer library.
.PP
dns\-query\-mutator can convert network trace files to raw files.
.PP
It is recommended to use \f[I]raw\f[] input files when the input query
rate is high, in order to achieve the actual query rate.
.PP
By default, dns\-replay\-controller loads all the input traces into
memory.
Option \f[C]\-\-trace_limit\f[] can preload limited seconds of traces to
control RAM usage.
.SH OPTIONS
.TP
.B \f[C]\-\-input\f[] \f[I]FORMAT:PATH\f[]
input stream, format and file separated by colon like FORMAT:FILE.
Accepted format: `trace' (network trace), `text' (plain text Fsdb),
`raw' (customized binary).
Use `\-' as FILE to read from standard input.
.RS
.RE
.TP
.B \f[C]\-\-output\f[] \f[I]FILE\f[]
specify output file which contains the output data from clients, `\-'
for standard output
.RS
.RE
.TP
.B \f[C]\-\-address\f[] \f[I]ADDRESS\f[]
address to listen on
.RS
.RE
.TP
.B \f[C]\-\-port\f[] \f[I]PORT\f[]
port number to listen on
.RS
.RE
.TP
.B \f[C]\-\-num_clients\f[] \f[I]NUMBER\f[]
the total number of clients allowed
.RS
.RE
.TP
.B \f[C]\-\-trace_limit\f[] \f[I]SECONDS\f[]
preload seconds of trace, used to control memory consumption default is
none (0 or negative integer): read all in memory
.RS
.RE
.TP
.B \f[C]\-\-filter\f[] \f[I]FILTER\f[]
colon separated numbers to indicate different portions of queries to
different clients.
E.g.
string \[lq]10,30,60\[rq] means 10%, 30% and 60% queries to 1st, 2nd and
3rd clients.
Or a file that provides such information.
.RS
.RE
.TP
.B \f[C]\-\-help\f[]
print help message.
For short message, try \[lq]\[en]helpmatch main\[rq]
.RS
.RE
.TP
.B \f[C]\-\-version\f[]
show the program version
.RS
.RE
.TP
.B \f[C]\-\-dry_tun\f[]
run the program without create network connections, useful for debugging
input
.RS
.RE
.SH EXAMPLES
.IP "1." 3
running at port 10053 on 192.168.1.100 and allow 20 clients
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-controller\ \-\-input\ raw:t.raw\ \-\-address\ 192.168.1.100\ \-\-port\ 10053\ \-n\ 20
\f[]
.fi
.RE
.IP "2." 3
read from stdin
.RS 4
.IP
.nf
\f[C]
\ cat\ t.raw\ |\ ./dns\-replay\-controller\ \-\-input\ raw:\-\ \-\-address\ 192.168.1.100\ \-\-port\ 10053\ \-n\ 20
\f[]
.fi
.RE
.IP "3." 3
only preload 15\-second trace to limit memory usage
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-controller\ \-\-input\ raw:t.raw\ \-\-address\ 192.168.1.100\ \-\-port\ 10053\ \-n\ 20\ \-\-trace_limit\ 15
\f[]
.fi
.RE
.IP "4." 3
show more log message
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-controller\ \-\-input\ raw:t.raw\ \-\-address\ 192.168.1.100\ \-\-port\ 10053\ \-n\ 20\ \-\-trace_limit\ 15\ \-\-v=2
\f[]
.fi
.RE
.IP "5." 3
distribute 30%, 50% and 20% of the input queries to 1st, 2nd and 3rd
clients.
.RS 4
.IP
.nf
\f[C]
\ ./dns\-replay\-controller\ \-\-input\ raw:t.raw\ \-\-address\ 192.168.1.100\ \-\-port\ 10053\ \-n\ 3\ \-\-trace_limit\ 15\ \-\-filter\ 30,50,20
\f[]
.fi
.RE
.SH INSTALLATION
.PP
To build, type \f[I]make\f[].
.PP
It requires the following packages on Fedora: ldns\-devel
libtrace\-devel libevent\-devel protobuf\-devel glog\-devel
gflags\-devel
.SH ALSO SEE
.PP
dns\-replay\-client(1), dns\-query\-mutator(1), Fsdb(3)
.SH CHANGES
.IP \[bu] 2
0.1, 2016\-10\-22: initial release
.IP \[bu] 2
0.2, 2018\-03\-19: add \f[C]\-\-filter\f[] option and use gflags and
glog
.IP \[bu] 2
1.0, 2018\-10\-05: improve documentation and Beta release
.SH AUTHORS
Liang Zhu <liangzhu@isi.edu>.
